{"version":3,"sources":["webpack:///./src/pages/links.js","webpack:///./src/utils/helpers.js","webpack:///./src/components/resourceList/resourceList.js"],"names":["LinksPage","render","workshops","this","props","data","allMarkdownRemark","edges","openWorkshops","filter","node","frontmatter","privacySetting","closedWorkshops","allClosedWorkshopLinks","length","links","reduce","acc","normalizedLinks","normalizeResourceList","bodyClass","title","pageUrl","className","componentStyles","grid","gridSeciton","rightCol","to","list","style","fontStyle","map","i","linksList","key","marginBottom","resources","React","Component","pageQuery","resourceList","linkKey","resource","name","linkPath","sort","a","b","keyA","keyB","ResourceList","listStyle","link","href","target","rel"],"mappings":"imBAUMA,E,gLAENC,OAAA,WAAU,IAEFC,EADSC,KAAKC,MAAbC,KACgBC,kBAAkBC,MACnCC,EAAgBN,EAAUO,QAAO,kBAAiD,SAAjD,EAAEC,KAAgBC,YAAYC,kBAC/DC,EAAkBX,EAAUO,QAAO,kBAAiD,WAAjD,EAAEC,KAAgBC,YAAYC,kBAEjEE,EAA2BD,EAAgBE,QAAS,EACxDF,EACGJ,QAAO,qBAAEC,KAAgBC,YAAYK,SACrCC,QAAO,SAACC,EAAD,GAAkB,IAAXR,EAAU,EAAVA,KACPS,EAAkBC,YAAsBV,EAAKC,YAAYK,MAAO,OACtE,MAAM,GAAN,SAAWG,GAAX,EAA+BD,MAC9B,IACJ,GAEH,OACE,kBAAC,IAAD,CAAQG,UAAU,aAChB,kBAAC,IAAD,CAAKC,MAAM,QAAQC,QAAQ,WAC3B,6BACM,6BAASC,UAAWC,IAAgBC,MAChC,yBAAKF,UAAcC,IAAgBE,YAArB,IAAoCF,IAAgBG,SAApD,IAAgEH,IAAgBT,OAC1F,kBAAC,IAAD,CAAMa,GAAG,iBACP,kCAAO,6BAAP,QAIN,yBAAKL,UAAcC,IAAgBK,KAArB,IAA6BL,IAAgBE,aAC5B,IAAzBnB,EAAcO,QAAkD,IAAlCD,EAAuBC,QACrD,uBAAGgB,MAAO,CAACC,UAAU,WAArB,2CAGDxB,EAAcO,QAAU,GACrBP,EAAcyB,KAAI,WAASC,GAAO,IAAdxB,EAAa,EAAbA,KAChB,GAAGA,EAAKC,YAAYK,MAAO,CACzB,IAAMmB,EAAYf,YAAsBV,EAAKC,YAAYK,MAAO,OAChE,OACI,yBAAKoB,IAAKF,GACR,wBAAIH,MAAO,CAACM,aAAa,UAAY3B,EAAKC,YAAYW,OACtD,kBAAC,IAAD,CACEgB,UAAWH,KAIhB,OAAO,QAInBrB,EAAuBC,QAAU,GAC9B,oCACE,wBAAIgB,MAAO,CAACM,aAAa,UAAzB,eACA,kBAAC,IAAD,CAAcC,UAAYxB,U,GApD5ByB,IAAMC,WAkEfxC,YAGR,IAAMyC,EAAS,c,oFC/ETrB,EAAwB,SAACsB,EAAcC,GAChD,OAAOD,EAAaT,KAAI,SAAAW,GAAQ,MAC5B,CACEC,KAAMD,EAASC,KACfC,SAAUF,EAASD,OAGxBI,MAAK,SAACC,EAAGC,GACR,IAAIC,EAAOF,EAAEH,KACTM,EAAOF,EAAEJ,KACb,OAAGK,EAAOC,GAAc,EACrBD,EAAOC,EAAa,EAChB,O,kFCSEC,IAjBM,SAAC,GAA2B,IAA1Bd,EAAyB,EAAzBA,W,2HAAyB,kBAE9C,OACE,wBAAIP,MAAO,CAACsB,UAAW,OAAQhB,aAAa,MAEpCC,EAAUL,KAAI,SAACqB,EAAMpB,GAAP,OACV,wBAAIE,IAAKF,GACL,uBAAGqB,KAAMD,EAAKR,SAAUU,OAAO,SAASC,IAAI,uBAC3CH,EAAKT","file":"component---src-pages-links-js-e16bf40aac79084e0054.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout/layout\"\nimport SEO from \"../components/seo\"\nimport ResourceList from \"../components/resourceList/resourceList\"\nimport {normalizeResourceList} from \"../utils/helpers\"\n\nimport componentStyles from \"./links.module.scss\"\n\nclass LinksPage extends React.Component {\n\nrender() {\n  const {data} = this.props;\n  const workshops = data.allMarkdownRemark.edges\n  const openWorkshops = workshops.filter(({node}) => (node.frontmatter.privacySetting === \"open\"))\n  const closedWorkshops = workshops.filter(({node}) => (node.frontmatter.privacySetting === \"closed\"))\n\n  const allClosedWorkshopLinks = ( closedWorkshops.length >=1 ) ? (\n    closedWorkshops\n      .filter(({node}) => (node.frontmatter.links))\n      .reduce((acc, {node}) => {\n        const normalizedLinks = normalizeResourceList(node.frontmatter.links, \"url\");\n        return [...normalizedLinks, ...acc]\n      }, [])\n  ):([])\n\n  return(\n    <Layout bodyClass=\"greenBody\">\n      <SEO title=\"Links\" pageUrl=\"/links\"/>\n      <div>\n            <section className={componentStyles.grid}>\n                <div className={`${componentStyles.gridSeciton} ${componentStyles.rightCol} ${componentStyles.links}`}>\n                    <Link to=\"/classContent\">\n                      <h2>LIN<br/>KS</h2>\n                    </Link>\n                </div>\n\n                <div className={`${componentStyles.list} ${componentStyles.gridSeciton}`}>\n                    {(openWorkshops.length === 0 && allClosedWorkshopLinks.length === 0) &&\n                      <p style={{fontStyle: `italic`}}>No workshop links have been posted yet.</p>\n                    }\n\n                    {openWorkshops.length >= 1 &&\n                        openWorkshops.map(({node}, i) => {\n                            if(node.frontmatter.links) {\n                              const linksList = normalizeResourceList(node.frontmatter.links, \"url\")\n                              return(\n                                  <div key={i}>\n                                    <h4 style={{marginBottom: `.5rem`}}>{node.frontmatter.title}</h4>\n                                    <ResourceList \n                                      resources={linksList} />\n                                  </div>\n                                )\n                            }\n                            else return null;\n                        })\n                    }\n\n                    {allClosedWorkshopLinks.length >= 1 &&\n                        <>\n                          <h4 style={{marginBottom: `.5rem`}}>Extra Links</h4>\n                          <ResourceList resources={ allClosedWorkshopLinks }/>\n                        </>\n                    }\n                </div>\n\n            </section>\n        </div>\n      \n    </Layout>\n  )\n}\n  \n}\n\nexport default LinksPage\n\n// filter: {frontmatter: {placeholder: {eq: false}}},\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(\n        filter: {frontmatter: {placeholder: {eq: false}}},\n        sort: { fields: [frontmatter___date], \n        order: ASC })\n    {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            privacySetting\n            title\n            links{\n                name\n                url\n            }\n          }\n        }\n      }\n    }\n  }\n`","export const normalizeResourceList = (resourceList, linkKey) => {\n    return resourceList.map(resource => (\n        {\n          name: resource.name,\n          linkPath: resource[linkKey]\n        }\n    ))\n    .sort((a, b) => {\n      let keyA = a.name,\n          keyB = b.name;\n      if(keyA < keyB) return -1;\n      if(keyA > keyB) return 1;\n      return 0;\n    })\n}","import React from \"react\"\n\n// import componentStyles from \"./nav.module.scss\" \n\nconst ResourceList = ({resources, ...props}) => {\n\n  return(\n    <ul style={{listStyle: \"none\", marginBottom: `0`}}>\n        {\n            resources.map((link, i) => (\n                <li key={i}>\n                    <a href={link.linkPath} target=\"_blank\" rel=\"noopener noreferrer\">\n                    {link.name}\n                    </a>\n                </li>\n            ))\n        }\n    </ul>\n  )\n}\n\nexport default ResourceList\n"],"sourceRoot":""}