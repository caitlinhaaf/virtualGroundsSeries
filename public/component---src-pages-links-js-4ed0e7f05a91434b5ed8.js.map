{"version":3,"sources":["webpack:///./src/pages/links.js","webpack:///./src/components/resourceList/resourceList.js","webpack:///./src/utils/helpers.js"],"names":["LinksPage","render","workshops","this","props","data","allMarkdownRemark","edges","openWorkshops","filter","node","frontmatter","privacySetting","closedWorkshops","bodyClass","title","className","componentStyles","grid","gridSeciton","rightCol","links","to","list","length","map","i","linksList","normalizeResourceList","key","style","marginBottom","resources","React","Component","pageQuery","ResourceList","listStyle","link","href","linkPath","target","rel","name","resourceList","linkKey","resource"],"mappings":"kOAUMA,E,gLAENC,OAAA,WAAU,IAEFC,EADSC,KAAKC,MAAbC,KACgBC,kBAAkBC,MACnCC,EAAgBN,EAAUO,QAAO,kBAAiD,SAAjD,EAAEC,KAAgBC,YAAYC,kBAC/DC,EAAkBX,EAAUO,QAAO,kBAAiD,WAAjD,EAAEC,KAAgBC,YAAYC,kBAEvE,OACE,kBAAC,IAAD,CAAQE,UAAU,aAChB,kBAAC,IAAD,CAAKC,MAAM,kBACX,6BACM,6BAASC,UAAWC,IAAgBC,MAChC,yBAAKF,UAAcC,IAAgBE,YAArB,IAAoCF,IAAgBG,SAApD,IAAgEH,IAAgBI,OAC1F,kBAAC,IAAD,CAAMC,GAAG,iBACP,kCAAO,6BAAP,QAIN,yBAAKN,UAAcC,IAAgBM,KAArB,IAA6BN,IAAgBE,aACtDX,EAAcgB,QAAU,GACrBhB,EAAciB,KAAI,WAASC,GAAO,IAAdhB,EAAa,EAAbA,KAChB,GAAGA,EAAKC,YAAYU,MAAO,CACzB,IAAMM,EAAYC,YAAsBlB,EAAKC,YAAYU,MAAO,OAChE,OACI,yBAAKQ,IAAKH,GACR,wBAAII,MAAO,CAACC,aAAa,UAAYrB,EAAKC,YAAYI,OACtD,kBAAC,IAAD,CACEiB,UAAWL,KAIhB,OAAO,QAInBd,EAAgBW,QAAU,GACvB,oCACE,wBAAIM,MAAO,CAACC,aAAa,UAAzB,eACGlB,EAAgBW,OAAQ,GACvBX,EAAgBY,KAAI,WAASC,GAAO,IAAdhB,EAAa,EAAbA,KACpB,GAAGA,EAAKC,YAAYU,MAAM,CACxB,IAAMM,EAAYC,YAAsBlB,EAAKC,YAAYU,MAAO,OAChE,OACE,kBAAC,IAAD,CAAcQ,IAAKH,EAAGM,UAAWL,IAGhC,OAAO,c,GA/CpBM,IAAMC,WA+DflC,YAGR,IAAMmC,EAAS,c,kFCvDPC,IAjBM,SAAC,GAA2B,IAA1BJ,EAAyB,EAAzBA,W,2HAAyB,kBAE9C,OACE,wBAAIF,MAAO,CAACO,UAAW,OAAQN,aAAa,MAEpCC,EAAUP,KAAI,SAACa,EAAMZ,GAAP,OACV,wBAAIG,IAAKH,GACL,uBAAGa,KAAMD,EAAKE,SAAUC,OAAO,SAASC,IAAI,uBAC3CJ,EAAKK,a,6ECZbf,EAAwB,SAACgB,EAAcC,GAChD,OAAOD,EAAanB,KAAI,SAAAqB,GAAQ,MAC5B,CACEH,KAAMG,EAASH,KACfH,SAAUM,EAASD","file":"component---src-pages-links-js-4ed0e7f05a91434b5ed8.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout/layout\"\nimport SEO from \"../components/seo\"\nimport ResourceList from \"../components/resourceList/resourceList\"\nimport {normalizeResourceList} from \"../utils/helpers\"\n\nimport componentStyles from \"./links.module.scss\"\n\nclass LinksPage extends React.Component {\n\nrender() {\n  const {data} = this.props;\n  const workshops = data.allMarkdownRemark.edges\n  const openWorkshops = workshops.filter(({node}) => (node.frontmatter.privacySetting === \"open\"))\n  const closedWorkshops = workshops.filter(({node}) => (node.frontmatter.privacySetting === \"closed\"))\n\n  return(\n    <Layout bodyClass=\"greenBody\">\n      <SEO title=\"Class Content\" />\n      <div>\n            <section className={componentStyles.grid}>\n                <div className={`${componentStyles.gridSeciton} ${componentStyles.rightCol} ${componentStyles.links}`}>\n                    <Link to=\"/classContent\">\n                      <h2>LIN<br/>KS</h2>\n                    </Link>\n                </div>\n\n                <div className={`${componentStyles.list} ${componentStyles.gridSeciton}`}>\n                    {openWorkshops.length >= 1 &&\n                        openWorkshops.map(({node}, i) => {\n                            if(node.frontmatter.links) {\n                              const linksList = normalizeResourceList(node.frontmatter.links, \"url\")\n                              return(\n                                  <div key={i}>\n                                    <h4 style={{marginBottom: `.5rem`}}>{node.frontmatter.title}</h4>\n                                    <ResourceList \n                                      resources={linksList} />\n                                  </div>\n                                )\n                            }\n                            else return null;\n                        })\n                    }\n\n                    {closedWorkshops.length >= 1 &&\n                        <>\n                          <h4 style={{marginBottom: `.5rem`}}>Extra Links</h4>\n                            {closedWorkshops.length >1 &&\n                              closedWorkshops.map(({node}, i) => {\n                                if(node.frontmatter.links){\n                                  const linksList = normalizeResourceList(node.frontmatter.links, \"url\")\n                                  return(\n                                    <ResourceList key={i} resources={linksList}/>\n                                  )\n                                }\n                                else return null \n                              })\n                            }\n                        </>\n                    }\n                </div>\n\n            </section>\n        </div>\n      \n    </Layout>\n  )\n}\n  \n}\n\nexport default LinksPage\n\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: ASC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            privacySetting\n            title\n            links{\n                name\n                url\n            }\n          }\n        }\n      }\n    }\n  }\n`","import React from \"react\"\n\n// import componentStyles from \"./nav.module.scss\" \n\nconst ResourceList = ({resources, ...props}) => {\n\n  return(\n    <ul style={{listStyle: \"none\", marginBottom: `0`}}>\n        {\n            resources.map((link, i) => (\n                <li key={i}>\n                    <a href={link.linkPath} target=\"_blank\" rel=\"noopener noreferrer\">\n                    {link.name}\n                    </a>\n                </li>\n            ))\n        }\n    </ul>\n  )\n}\n\nexport default ResourceList\n","export const normalizeResourceList = (resourceList, linkKey) => {\n    return resourceList.map(resource => (\n        {\n          name: resource.name,\n          linkPath: resource[linkKey]\n        }\n    ))\n}"],"sourceRoot":""}