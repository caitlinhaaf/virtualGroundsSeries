{"version":3,"sources":["webpack:///./src/pages/gallery.module.scss","webpack:///./src/pages/gallery.js"],"names":["module","exports","GalleryPage","render","allGalleryImgs","this","props","data","allMarkdownRemark","edges","filter","node","frontmatter","galleryImages","reduce","acc","console","log","bodyClass","title","pageUrl","className","componentStyles","grid","gridSeciton","leftCol","gallery","to","length","style","fontStyle","list","slice","map","image","i","key","src","alt","altText","listContinued","React","Component"],"mappings":"+EACAA,EAAOC,QAAU,CAAC,KAAO,8BAA8B,YAAc,qCAAqC,QAAU,iCAAiC,QAAU,iCAAiC,aAAe,sCAAsC,KAAO,8BAA8B,cAAgB,yC,+JCOpSC,E,kGAENC,OAAA,WACE,IAGMC,EAHSC,KAAKC,MAAbC,KACgBC,kBAAkBC,MAGtCC,QAAO,qBAAEC,KAAgBC,YAAYC,iBACrCC,QAAO,SAACC,EAAD,OAAOJ,EAAP,EAAOA,KAAP,4BAAsBI,GAAtB,YAA8BJ,EAAKC,YAAYC,kBAAiB,IAI1E,OAFAG,QAAQC,IAAIb,GAGV,kBAAC,IAAD,CAAQc,UAAU,aAChB,kBAAC,IAAD,CAAKC,MAAM,gBAAgBC,QAAQ,aAEnC,6BACM,6BAASC,UAAWC,IAAgBC,MAEhC,yBAAKF,UAAcC,IAAgBE,YAArB,IAAoCF,IAAgBG,QAApD,IAA+DH,IAAgBI,SACzF,kBAAC,OAAD,CAAMC,GAAG,iBACP,mCAAQ,6BAAR,SAGqB,IAA1BvB,EAAewB,QACd,uBAAGC,MAAO,CAACC,UAAU,WAArB,4CAGD1B,EAAewB,QAAS,GACvB,yBAAKP,UAAcC,IAAgBS,KAArB,IAA6BT,IAAgBE,aACxDpB,EAAe4B,MAAM,EAAE,GAAGC,KAAI,SAACC,EAAOC,GAAR,OAC3B,yBAAKC,IAAKD,EAAGE,IAAKH,EAAMA,MAAOI,IAAKJ,EAAMK,cAMjDnC,EAAewB,OAAS,GACvB,yBAAKP,UAAcC,IAAgBkB,cAArB,IAAsClB,IAAgBE,aACjEpB,EAAe4B,MAAM,GAAGC,KAAI,SAACC,EAAOC,GAAR,OACzB,yBAAKC,IAAKD,EAAGE,IAAKH,EAAMA,MAAOI,IAAKJ,EAAMK,kB,GAxCxCE,IAAMC,WAsDjBxC","file":"component---src-pages-gallery-js-57a8c708f150ce8a6bc0.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"gallery-module--grid--3kjYs\",\"gridSeciton\":\"gallery-module--gridSeciton--AShZh\",\"leftCol\":\"gallery-module--leftCol--3d5Ew\",\"gallery\":\"gallery-module--gallery--1JvGs\",\"galleryImage\":\"gallery-module--galleryImage--w6zmn\",\"list\":\"gallery-module--list--3TLi_\",\"listContinued\":\"gallery-module--listContinued--1S01p\"};","import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout/layout\"\r\nimport SEO from \"../components/seo\"\r\n\r\nimport componentStyles from \"./gallery.module.scss\"\r\n\r\nclass GalleryPage extends React.Component {\r\n\r\nrender() {\r\n  const {data} = this.props;\r\n  const workshops = data.allMarkdownRemark.edges;\r\n\r\n  const allGalleryImgs = workshops\r\n    .filter(({node}) => (node.frontmatter.galleryImages))\r\n    .reduce((acc, {node}) => ([...acc, ...node.frontmatter.galleryImages]), [])\r\n\r\n  console.log(allGalleryImgs)\r\n\r\n  return(\r\n    <Layout bodyClass=\"greenBody\">\r\n      <SEO title=\"Class Content\" pageUrl=\"/gallery\"/>\r\n\r\n      <div>\r\n            <section className={componentStyles.grid}>\r\n\r\n                <div className={`${componentStyles.gridSeciton} ${componentStyles.leftCol} ${componentStyles.gallery}`}>\r\n                    <Link to=\"/classContent\">\r\n                      <h2>GALL<br/>ERY</h2>\r\n                    </Link>\r\n                </div>\r\n                {allGalleryImgs.length === 0 &&\r\n                  <p style={{fontStyle: `italic`}}>No workshop images have been posted yet.</p>\r\n                }\r\n\r\n                {allGalleryImgs.length >=1 &&\r\n                  <div className={`${componentStyles.list} ${componentStyles.gridSeciton}`}>\r\n                    {allGalleryImgs.slice(0,2).map((image, i) => (\r\n                        <img key={i} src={image.image} alt={image.altText}/>\r\n                      ))\r\n                    }\r\n                  </div>\r\n                }\r\n                \r\n                {allGalleryImgs.length > 2 &&\r\n                  <div className={`${componentStyles.listContinued} ${componentStyles.gridSeciton}`}>\r\n                    {allGalleryImgs.slice(3).map((image, i) => (\r\n                        <img key={i} src={image.image} alt={image.altText}/>\r\n                      ))\r\n                    }\r\n                  </div>\r\n                }\r\n\r\n            </section>\r\n        </div>\r\n    </Layout>\r\n  )\r\n}\r\n  \r\n}\r\n\r\nexport default GalleryPage\r\n\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    allMarkdownRemark(\r\n      filter: {frontmatter: {placeholder: {eq: false}}},\r\n      sort: { fields: [frontmatter___date], \r\n      order: ASC \r\n    }) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n            galleryImages{\r\n                image\r\n                altText\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`"],"sourceRoot":""}