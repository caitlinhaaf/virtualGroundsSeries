{"version":3,"sources":["webpack:///./src/pages/readings.js","webpack:///./src/components/resourceList/resourceList.js","webpack:///./src/utils/helpers.js"],"names":["ReadingsPage","render","workshops","this","props","data","allMarkdownRemark","edges","openWorkshops","filter","node","frontmatter","privacySetting","closedWorkshops","bodyClass","title","className","componentStyles","grid","gridSeciton","leftCol","readings","to","list","length","map","i","fileLinks","readingFiles","normalizeResourceList","urlLinks","readingLinks","allReadings","key","style","marginBottom","resources","React","Component","pageQuery","ResourceList","listStyle","link","href","linkPath","target","rel","name","resourceList","linkKey","resource"],"mappings":"imBAUMA,E,gLAENC,OAAA,WAAU,IAGFC,EADSC,KAAKC,MAAbC,KACgBC,kBAAkBC,MAEnCC,EAAgBN,EAAUO,QAAO,kBAAiD,SAAjD,EAAEC,KAAgBC,YAAYC,kBAC/DC,EAAkBX,EAAUO,QAAO,kBAAiD,WAAjD,EAAEC,KAAgBC,YAAYC,kBAEvE,OACE,kBAAC,IAAD,CAAQE,UAAU,aAChB,kBAAC,IAAD,CAAKC,MAAM,kBAEX,6BACM,6BAASC,UAAWC,IAAgBC,MAEhC,yBACIF,UAAcC,IAAgBE,YAArB,IAAoCF,IAAgBG,QAApD,IAA+DH,IAAgBI,UAExF,kBAAC,IAAD,CAAMC,GAAG,iBACL,oCAAS,6BAAT,SAIR,yBAAKN,UAAcC,IAAgBM,KAArB,IAA6BN,IAAgBE,aAC3B,IAAzBX,EAAcgB,QAA2C,IAA3BX,EAAgBW,QAC/C,yEAGAhB,EAAcgB,QAAU,GACtBhB,EAAciB,KAAI,WAASC,GAAO,IAAdhB,EAAa,EAAbA,KACViB,EAAYjB,EAAKC,YAAYiB,aACjCC,YAAsBnB,EAAKC,YAAYiB,aAAc,QAClD,GACCE,EAAWpB,EAAKC,YAAYoB,aAChCF,YAAsBnB,EAAKC,YAAYoB,aAAc,OAClD,GACCC,EAAW,YAAOL,GAAP,EAAqBG,IAEtC,OACA,yBAAKG,IAAKP,GACN,wBAAIQ,MAAO,CAACC,aAAa,SAAWzB,EAAKC,YAAYI,OACrD,kBAAC,IAAD,CAAcqB,UAAWJ,QAMpCnB,EAAgBW,QAAU,GACzB,6BACE,wBAAIU,MAAO,CAACC,aAAa,SAAzB,kBACGtB,EAAgBY,KAAI,WAASC,GAAO,IAAdhB,EAAa,EAAbA,KAEfiB,EAAYjB,EAAKC,YAAYiB,aACjCC,YAAsBnB,EAAKC,YAAYiB,aAAc,QAClD,GACCE,EAAWpB,EAAKC,YAAYoB,aAChCF,YAAsBnB,EAAKC,YAAYoB,aAAc,OAClD,GACCC,EAAW,YAAOL,GAAP,EAAqBG,IAEtC,OACE,kBAAC,IAAD,CAAcG,IAAKP,EAAGU,UAAWJ,a,GA/DpCK,IAAMC,WAgFlBtC,YAGR,IAAMuC,EAAS,c,kFCxEPC,IAjBM,SAAC,GAA2B,IAA1BJ,EAAyB,EAAzBA,W,2HAAyB,kBAE9C,OACE,wBAAIF,MAAO,CAACO,UAAW,OAAQN,aAAa,MAEpCC,EAAUX,KAAI,SAACiB,EAAMhB,GAAP,OACV,wBAAIO,IAAKP,GACL,uBAAGiB,KAAMD,EAAKE,SAAUC,OAAO,SAASC,IAAI,uBAC3CJ,EAAKK,a,6ECZblB,EAAwB,SAACmB,EAAcC,GAChD,OAAOD,EAAavB,KAAI,SAAAyB,GAAQ,MAC5B,CACEH,KAAMG,EAASH,KACfH,SAAUM,EAASD","file":"component---src-pages-readings-js-c14e08b28ce8772d3c03.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout/layout\"\nimport SEO from \"../components/seo\"\nimport ResourceList from \"../components/resourceList/resourceList\"\nimport {normalizeResourceList} from \"../utils/helpers\"\n\nimport componentStyles from \"./readings.module.scss\"\n\nclass ReadingsPage extends React.Component {\n\nrender() {\n\n  const {data} = this.props;\n  const workshops = data.allMarkdownRemark.edges\n\n  const openWorkshops = workshops.filter(({node}) => (node.frontmatter.privacySetting === \"open\"))\n  const closedWorkshops = workshops.filter(({node}) => (node.frontmatter.privacySetting === \"closed\"))\n\n  return(\n    <Layout bodyClass=\"greenBody\">\n      <SEO title=\"Class Content\" />\n\n      <div>\n            <section className={componentStyles.grid}>\n\n                <div \n                    className={`${componentStyles.gridSeciton} ${componentStyles.leftCol} ${componentStyles.readings}`}\n                >\n                    <Link to=\"/classContent\">\n                        <h2>READI<br/>NGS</h2>\n                    </Link>\n                </div>\n\n                <div className={`${componentStyles.list} ${componentStyles.gridSeciton}`}>\n                    { (openWorkshops.length === 0 && closedWorkshops.length === 0) &&\n                      <p>No workshop readings have been posted yet.</p>\n                    }\n                  \n                    { openWorkshops.length >= 1 &&\n                        openWorkshops.map(({node}, i) => {\n                            const fileLinks = node.frontmatter.readingFiles ? (\n                              normalizeResourceList(node.frontmatter.readingFiles, \"file\")\n                            ) : ([])\n                            const urlLinks = node.frontmatter.readingLinks ? (\n                              normalizeResourceList(node.frontmatter.readingLinks, \"url\")\n                            ) : ([])\n                            const allReadings = [...fileLinks, ...urlLinks] \n\n                            return(\n                            <div key={i}>\n                                <h4 style={{marginBottom: `.5em`}}>{node.frontmatter.title}</h4>\n                                <ResourceList resources={allReadings} />\n                            </div>\n                            )\n                        })     \n                    }\n\n                    {closedWorkshops.length >= 1 &&\n                      <div>\n                        <h4 style={{marginBottom: `.5em`}}>Extra Readings</h4>\n                          {closedWorkshops.map(({node}, i) => { \n                \n                            const fileLinks = node.frontmatter.readingFiles ? (\n                              normalizeResourceList(node.frontmatter.readingFiles, \"file\")\n                            ) : ([])\n                            const urlLinks = node.frontmatter.readingLinks ? (\n                              normalizeResourceList(node.frontmatter.readingLinks, \"url\")\n                            ) : ([])\n                            const allReadings = [...fileLinks, ...urlLinks] \n\n                            return(\n                              <ResourceList key={i} resources={allReadings} />\n                            )\n                          })\n                          }\n                      </div>\n                    }\n                </div>\n\n            </section>\n        </div>\n      \n    </Layout>\n  )\n}\n  \n}\n\nexport default ReadingsPage\n\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: ASC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            privacySetting\n            title\n            readingFiles{\n                name\n                file\n            }\n            readingLinks{\n              name\n              url\n          }\n          }\n        }\n      }\n    }\n  }\n`","import React from \"react\"\n\n// import componentStyles from \"./nav.module.scss\" \n\nconst ResourceList = ({resources, ...props}) => {\n\n  return(\n    <ul style={{listStyle: \"none\", marginBottom: `0`}}>\n        {\n            resources.map((link, i) => (\n                <li key={i}>\n                    <a href={link.linkPath} target=\"_blank\" rel=\"noopener noreferrer\">\n                    {link.name}\n                    </a>\n                </li>\n            ))\n        }\n    </ul>\n  )\n}\n\nexport default ResourceList\n","export const normalizeResourceList = (resourceList, linkKey) => {\n    return resourceList.map(resource => (\n        {\n          name: resource.name,\n          linkPath: resource[linkKey]\n        }\n    ))\n}"],"sourceRoot":""}