{"version":3,"sources":["webpack:///./src/pages/gallery.js"],"names":["GalleryPage","render","workshops","this","props","data","allMarkdownRemark","edges","bodyClass","title","className","componentStyles","grid","gridSeciton","leftCol","gallery","to","list","map","node","frontmatter","galleryImages","image","j","key","src","alt","altText","React","Component","pageQuery"],"mappings":"+MAQMA,E,gLAENC,OAAA,WAAU,IAEFC,EADSC,KAAKC,MAAbC,KACgBC,kBAAkBC,MAEzC,OACE,kBAAC,IAAD,CAAQC,UAAU,aAChB,kBAAC,IAAD,CAAKC,MAAM,kBAEX,6BACM,6BAASC,UAAWC,IAAgBC,MAEhC,yBAAKF,UAAcC,IAAgBE,YAArB,IAAoCF,IAAgBG,QAApD,IAA+DH,IAAgBI,SACzF,kBAAC,IAAD,CAAMC,GAAG,iBACP,mCAAQ,6BAAR,SAIN,yBAAKN,UAAcC,IAAgBM,KAArB,IAA6BN,IAAgBE,aACtDX,EAAUgB,KAAI,YAAa,IAAXC,EAAU,EAAVA,KACb,OACGA,EAAKC,YAAYC,cAChBF,EAAKC,YAAYC,cAAcH,KAAI,SAACI,EAAOC,GAAR,OACjC,yBAAKC,IAAKD,EAAGE,IAAKH,EAAMA,MAAOI,IAAKJ,EAAMK,aAG5C,a,GA3BFC,IAAMC,WA0CjB7B,YAGR,IAAM8B,EAAS","file":"component---src-pages-gallery-js-8db00bbe8a2cacbc31ee.js","sourcesContent":["import React from \"react\"\nimport { Link, graphql } from \"gatsby\"\n\nimport Layout from \"../components/layout/layout\"\nimport SEO from \"../components/seo\"\n\nimport componentStyles from \"./gallery.module.scss\"\n\nclass GalleryPage extends React.Component {\n\nrender() {\n  const {data} = this.props;\n  const workshops = data.allMarkdownRemark.edges\n\n  return(\n    <Layout bodyClass=\"greenBody\">\n      <SEO title=\"Class Content\" />\n\n      <div>\n            <section className={componentStyles.grid}>\n\n                <div className={`${componentStyles.gridSeciton} ${componentStyles.leftCol} ${componentStyles.gallery}`}>\n                    <Link to=\"/classContent\">\n                      <h2>GALL<br/>ERY</h2>\n                    </Link>\n                </div>\n\n                <div className={`${componentStyles.list} ${componentStyles.gridSeciton}`}>\n                    {workshops.map(({node}) => {\n                        return(\n                          (node.frontmatter.galleryImages) ? (\n                            node.frontmatter.galleryImages.map((image, j) => (\n                              <img key={j} src={image.image} alt={image.altText}/>\n                            ))\n                          ):(\n                            null\n                          )\n                        )\n                      })\n                    }\n                </div>\n\n            </section>\n        </div>\n    </Layout>\n  )\n}\n  \n}\n\nexport default GalleryPage\n\n\nexport const pageQuery = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: [frontmatter___date], order: ASC }) {\n      edges {\n        node {\n          excerpt\n          fields {\n            slug\n          }\n          frontmatter {\n            title\n            galleryImages{\n                image\n                altText\n            }\n          }\n        }\n      }\n    }\n  }\n`"],"sourceRoot":""}