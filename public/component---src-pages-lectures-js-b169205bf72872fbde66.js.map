{"version":3,"sources":["webpack:///./src/utils/helpers.js","webpack:///./src/pages/lectures.js","webpack:///./src/components/resourceList/resourceList.module.scss","webpack:///./src/components/resourceList/resourceList.js","webpack:///./src/pages/lectures.module.scss","webpack:///./node_modules/@babel/runtime/helpers/esm/objectWithoutPropertiesLoose.js"],"names":["normalizeResourceList","resourceList","linkKey","map","resource","name","linkPath","sortResourcesAlphabetically","arr","sort","a","b","keyA","keyB","LecturesPage","render","workshops","this","props","data","allMarkdownRemark","edges","openWorkshops","filter","node","frontmatter","privacySetting","lectureFiles","closedWorkshops","allClosedFiles","length","reduce","acc","normalizedLinks","allClosedUrls","lectureLinks","allClosedLinks","bodyClass","title","pageUrl","className","componentStyles","grid","gridSeciton","rightCol","lectures","to","list","style","fontStyle","i","allLectures","key","resources","React","Component","module","exports","ResourceList","link","listItem","href","target","rel","_objectWithoutPropertiesLoose","source","excluded","sourceKeys","Object","keys","indexOf"],"mappings":"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","file":"component---src-pages-lectures-js-b169205bf72872fbde66.js","sourcesContent":["// Used to normalize the namespaces for different types of resources\r\n// Params: arr (of objs), string (resource type: url or file)\r\n// Returns: arr (of objs)\r\nexport const normalizeResourceList = (resourceList, linkKey) => {\r\n  return resourceList.map(resource => (\r\n      {\r\n        name: resource.name,\r\n        linkPath: resource[linkKey]\r\n      }\r\n  ))\r\n}\r\n\r\nexport const sortResourcesAlphabetically = (arr) => (\r\n  arr.sort((a, b) => {\r\n    let keyA = a.name,\r\n        keyB = b.name;\r\n    if(keyA < keyB) return -1;\r\n    if(keyA > keyB) return 1;\r\n    return 0;\r\n  })\r\n)","import React from \"react\"\r\nimport { Link, graphql } from \"gatsby\"\r\n\r\nimport Layout from \"../components/layout/layout\"\r\nimport SEO from \"../components/seo\"\r\nimport ResourceList from \"../components/resourceList/resourceList\"\r\nimport {normalizeResourceList,sortResourcesAlphabetically} from \"../utils/helpers\"\r\n\r\nimport componentStyles from \"./lectures.module.scss\"\r\n\r\nclass LecturesPage extends React.Component {\r\n\r\nrender() {\r\n  const {data} = this.props;\r\n  const workshops = data.allMarkdownRemark.edges\r\n  const openWorkshops = workshops.filter(({node}) => (\r\n    node.frontmatter.privacySetting === \"open\"\r\n    &&\r\n    node.frontmatter.lectureFiles\r\n  ))\r\n  const closedWorkshops = workshops.filter(({node}) => (node.frontmatter.privacySetting === \"closed\"))\r\n\r\n  const allClosedFiles = ( closedWorkshops.length >=1 ) ? (\r\n    closedWorkshops\r\n      .filter(({node}) => (node.frontmatter.lectureFiles))\r\n      .reduce((acc, {node}) => {\r\n        const normalizedLinks = normalizeResourceList(node.frontmatter.lectureFiles, \"file\");\r\n        return [...normalizedLinks, ...acc]\r\n      }, [])\r\n  ):([])\r\n  const allClosedUrls = ( closedWorkshops.length >=1 ) ? (\r\n    closedWorkshops\r\n      .filter(({node}) => (node.frontmatter.lectureLinks))\r\n      .reduce((acc, {node}) => {\r\n        const normalizedLinks = normalizeResourceList(node.frontmatter.lectureLinks, \"url\");\r\n        return [...normalizedLinks, ...acc]\r\n      }, [])\r\n  ):([])\r\n  const allClosedLinks = sortResourcesAlphabetically([...allClosedFiles, ...allClosedUrls])\r\n\r\n  return(\r\n    <Layout bodyClass=\"greenBody\">\r\n      <SEO title=\"Lectures\" pageUrl=\"/lectures\"/>\r\n\r\n      <div>\r\n            <section className={componentStyles.grid}>\r\n\r\n                <div \r\n                    className={`${componentStyles.gridSeciton} ${componentStyles.rightCol} ${componentStyles.lectures}`}\r\n                >   \r\n                    <Link to=\"/classContent\">\r\n                        <h2>LECTU<br/>RES</h2>\r\n                    </Link>\r\n                </div>\r\n\r\n                <div className={`${componentStyles.list} ${componentStyles.gridSeciton}`}>\r\n                    { (openWorkshops.length === 0 && allClosedLinks.length === 0) &&\r\n                      <p style={{fontStyle: `italic`}}>No workshop lectures have been posted yet.</p>\r\n                    }\r\n\r\n                    { openWorkshops.length >= 1 &&\r\n                        openWorkshops.map(({node}, i) => {\r\n                            const lectureFiles = node.frontmatter.lectureFiles ? (\r\n                              normalizeResourceList(node.frontmatter.lectureFiles, \"file\")\r\n                            ) : ([])\r\n                            const lectureLinks = node.frontmatter.lectureLinks ? (\r\n                              normalizeResourceList(node.frontmatter.lectureLinks, \"url\")\r\n                            ) : ([])\r\n                            const allLectures = [...lectureFiles, ...lectureLinks] \r\n\r\n                            if(allLectures.length >=1){\r\n                              return(\r\n                                <div key={i}>\r\n                                    <h4>{node.frontmatter.title}</h4>\r\n                                    <ResourceList resources={sortResourcesAlphabetically(allLectures)} />\r\n                                </div>\r\n                              )\r\n                            }else return null\r\n                        })\r\n                    }\r\n\r\n                    {allClosedLinks.length >= 1 &&\r\n                        <>\r\n                          <h4>Extra Lectures</h4>\r\n                          <ResourceList resources={sortResourcesAlphabetically(allClosedLinks)} />\r\n                        </>\r\n                    }\r\n                </div>\r\n\r\n            </section>\r\n        </div>\r\n      \r\n    </Layout>\r\n  )\r\n}\r\n  \r\n}\r\n\r\nexport default LecturesPage\r\n\r\n\r\nexport const pageQuery = graphql`\r\n  query {\r\n    allMarkdownRemark(\r\n      filter: {frontmatter: {placeholder: {eq: false}}},\r\n      sort: { fields: [frontmatter___date], \r\n      order: ASC \r\n      }) {\r\n      edges {\r\n        node {\r\n          excerpt\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            privacySetting\r\n            title\r\n            lectureFiles{\r\n                name\r\n                file\r\n            }\r\n            lectureLinks{\r\n              name\r\n              url\r\n          }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"resourceList-module--list--3xW2h\",\"listItem\":\"resourceList-module--listItem--2QVvQ\"};","import React from \"react\"\r\n\r\nimport componentStyles from \"./resourceList.module.scss\" \r\n\r\nconst ResourceList = ({resources, ...props}) => {\r\n\r\n  return(\r\n    <ul className={componentStyles.list}>\r\n        {\r\n            resources.map((link, i) => (\r\n                <li key={i} className={componentStyles.listItem}>\r\n                    <a href={link.linkPath} target=\"_blank\" rel=\"noopener noreferrer\">\r\n                    {link.name}\r\n                    </a>\r\n                </li>\r\n            ))\r\n        }\r\n    </ul>\r\n  )\r\n}\r\n\r\nexport default ResourceList\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"grid\":\"lectures-module--grid--16JPj\",\"gridSeciton\":\"lectures-module--gridSeciton--1qR28\",\"leftCol\":\"lectures-module--leftCol--N41yT\",\"lectures\":\"lectures-module--lectures--LIYiP\",\"list\":\"lectures-module--list--1RzaU\"};","export default function _objectWithoutPropertiesLoose(source, excluded) {\n  if (source == null) return {};\n  var target = {};\n  var sourceKeys = Object.keys(source);\n  var key, i;\n\n  for (i = 0; i < sourceKeys.length; i++) {\n    key = sourceKeys[i];\n    if (excluded.indexOf(key) >= 0) continue;\n    target[key] = source[key];\n  }\n\n  return target;\n}"],"sourceRoot":""}